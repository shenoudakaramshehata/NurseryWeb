// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Nursery.Models;

#nullable disable

namespace Nursery.Data
{
    public partial class NurseryContext : DbContext
    {
        public NurseryContext()
        {
        }

        public NurseryContext(DbContextOptions<NurseryContext> options)
            : base(options)
        {
        }
        

        public virtual DbSet<Adz> Adz { get; set; }
        public virtual DbSet<AgeCategory> AgeCategory { get; set; }
        public virtual DbSet<Area> Area { get; set; }
        public virtual DbSet<Banner> Banner { get; set; }
        public virtual DbSet<City> City { get; set; }
        public virtual DbSet<ContactUs> ContactUs { get; set; }
        public virtual DbSet<Country> Country { get; set; }
        public virtual DbSet<EntityType> EntityType { get; set; }
        public virtual DbSet<NurseryImage> NurseryImage { get; set; }
        public virtual DbSet<NurseryMember> NurseryMember { get; set; }
        public virtual DbSet<NurserySubscription> NurserySubscription { get; set; }
        public virtual DbSet<Plan> Plan { get; set; }
        public virtual DbSet<Child> Child { get; set; }     
        public virtual DbSet<Parent> Parent { get; set; }
        public virtual DbSet<SystemConfiguration> SystemConfiguration { get; set; }
        public virtual DbSet<Configuration> Configuration { get; set; }
        public virtual DbSet<FAQ> FAQ { get; set; }
        public virtual DbSet<PageContent> PageContent { get; set; }
        public virtual DbSet<PaymentMethod> PaymentMethod { get; set; }
        public virtual DbSet<Newsletter> Newsletter { get; set; }

        public virtual DbSet<PublicDevice> PublicDevice { get; set; }
        public virtual DbSet<PublicNotification> PublicNotification { get; set; }
        public virtual DbSet<PublicNotificationDevice> PublicNotificationDevice { get; set; }
        public virtual DbSet<Language> Languages { get; set; }
        public virtual DbSet<PlanType> PlanTypes { get; set; }
        public virtual DbSet<Phase> Phases { get; set; }
        public virtual DbSet<MacsAccount> MacsAccounts { get; set; }
        public virtual DbSet<NurseryStudyLanguage> NurseryStudyLanguages { get; set; }
        public virtual DbSet<EntityTypeNotify> EntityTypeNotifies { get; set; }
        //public virtual DbSet<NurseryPlanType> NurseryPlanTypes { get; set; }
        //public virtual DbSet<DocumentType> DocumentTypes { get; set; }
        //public virtual DbSet<NurseryPlan> NurseryPlans { get; set; }
        //public virtual DbSet<StudentAttachment> StudentAttachments { get; set; }
        //public virtual DbSet<Student> Students { get; set; }
        //public virtual DbSet<AcademyYear> AcademyYears { get; set; }
        //public virtual DbSet<Group> Groups { get; set; }
        //public virtual DbSet<StudentGroup> StudentGroups { get; set; }

        // public virtual DbSet<NurseryPassword> NurseryPasswords { get; set; }
        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Language>().HasData(new Language {LanguageId  = 1, Title = "English" });
            modelBuilder.Entity<Language>().HasData(new Language {LanguageId  = 2, Title = "Arabic" });
            modelBuilder.Entity<Language>().HasData(new Language {LanguageId  = 3, Title = "Both" });
            modelBuilder.Entity<PlanType>().HasData(new PlanType { PlanTypeId  = 1, Title = "Silver",Cost=0 });
            modelBuilder.Entity<PlanType>().HasData(new PlanType { PlanTypeId = 2, Title = "Gold",Cost = 5 });
            modelBuilder.Entity<Phase>().HasData(new Phase { PhaseId = 1, TitleAR = "يوم",TitleEN="Day"});
            modelBuilder.Entity<Phase>().HasData(new Phase { PhaseId = 2, TitleAR = "أسبوع",TitleEN= "Week" });
            modelBuilder.Entity<Phase>().HasData(new Phase { PhaseId = 3, TitleAR = "شهر",TitleEN= "Month" });
            modelBuilder.Entity<Phase>().HasData(new Phase { PhaseId = 4, TitleAR = "سنة",TitleEN= "Year" });
            modelBuilder.Entity<EntityTypeNotify>().HasData(new EntityTypeNotify { EntityTypeNotifyId = 1, TitleAr = "حضانة", TitleEn = "Nursery" });
            modelBuilder.Entity<EntityTypeNotify>().HasData(new EntityTypeNotify { EntityTypeNotifyId = 2, TitleAr = "عام", TitleEn = "Public" });

        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}